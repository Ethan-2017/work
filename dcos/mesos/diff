diff --git a/dcos/mesos/Dockerfile.master b/dcos/mesos/Dockerfile.master
index 6b30603..23e0c6c 100644
--- a/dcos/mesos/Dockerfile.master
+++ b/dcos/mesos/Dockerfile.master
@@ -1,7 +1,7 @@
-FROM klaus1982/mesos
 
 MAINTAINER Klaus Ma <klaus1982.cn@gmail.com>
+MAINTAINER Yong Feng <yongfeng@ca.ibm.com>
 
-RUN mkdir -p /opt/work /opt/log
+RUN mkdir -p /opt/ibm/mesos/work /opt/ibm/mesos/log
 
-ENTRYPOINT ["mesos-master", "--work_dir=/opt/work", "--log_dir=/opt/log"]
+ENTRYPOINT ["mesos-master", "--work_dir=/opt/ibm/mesos/work", "--log_dir=/opt/ibm/mesos/log"]
diff --git a/dcos/mesos/Dockerfile.slave b/dcos/mesos/Dockerfile.slave
index 37df17e..bd32c92 100644
--- a/dcos/mesos/Dockerfile.slave
+++ b/dcos/mesos/Dockerfile.slave
@@ -1,7 +1,24 @@
-FROM klaus1982/mesos
-
 MAINTAINER Klaus Ma <klaus1982.cn@gmail.com>
+MAINTAINER Yong Feng <yongfeng@ca.ibm.com>
+
+RUN mkdir -p /opt/ibm/mesos/work /opt/ibm/mesos/log
+
+# Install docker util into docker image
+#RUN apt-get -y install apt-transport-https
+#RUN apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
+#RUN echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list
+#RUN apt-get update && apt-get purge lxc-docker* && apt-cache policy docker-engine
+#RUN apt-get -y install docker-engine
+
+# install iptables for k8s
+RUN apt-get -y install iptables
+
+# install nsenter for k8s, nsenter is not included in util-linux in Ubuntu14.04
+COPY ./nsenter /usr/bin/
+
+# copy docker binaries from build machine
+COPY ./docker /usr/bin/
 
-RUN mkdir -p /opt/work /opt/log
+USER root
 
-ENTRYPOINT ["mesos-slave", "--containerizers=docker,mesos", "--docker_socket=/var/run/docker.sock", "--work_dir=/opt/work", "--log_dir=/opt/log"]
+ENTRYPOINT ["mesos-slave", "--containerizers=docker,mesos", "--docker_socket=/var/run/docker.sock", "--work_dir=/opt/ibm/mesos/work", "--log_dir=/opt/ibm/mesos/log"]
diff --git a/dcos/mesos/build.sh b/dcos/mesos/build.sh
index 306f956..065ee47 100755
--- a/dcos/mesos/build.sh
+++ b/dcos/mesos/build.sh
@@ -1,22 +1,34 @@
 #!/bin/bash
 
-
-MESOS_VER=0.26.0
-BUILD_DATE=`date "+%Y%m%d" --date="yesterday"`
+MESOS_VER=0.27.0
+BUILD_DATE=$(date "+%Y%m%d" --date="yesterday")
 BUILD_TAG="03 19"
 BUILD_URL=http://pokgsa.ibm.com/projects/i/ibm-mesos/dailybuild-deb
+BUILD_RELEASE=http://pokgsa.ibm.com/projects/i/ibm-mesos/releases-deb/0.25.0/mesos_0.25.0-2015110105_amd64.deb
+TOP_DIR=$(pwd)
+
+if [ ! -z $BUILD_RELEASE ];
+then
+#  wget $BUILD_RELEASE
+#  mv $(basename $BUILD_RELEASE) mesos.deb
+#else
+  for i in $BUILD_TAG
+  do
+    MESOS_URL=$BUILD_URL/$BUILD_DATE$i/"mesos_"$MESOS_VER"-"$BUILD_DATE$i"_amd64.deb"
+#    wget $MESOS_URL
+    if [ $? -eq 0 ] ; then
+#      mv $(basename $MESOS_URL) mesos.deb
+      break;
+    fi
+  done
+fi
 
+# get dailybuild
+wget $BUILD_URL/last -O index.html
 
-for i in $BUILD_TAG
-do
-  MESOS_URL=$BUILD_URL/$BUILD_DATE$i/"mesos_"$MESOS_VER"-"$BUILD_DATE$i"_amd64.deb"
-  wget $MESOS_URL
-  if [ $? -eq 0 ] ; then
-    mv $(basename $MESOS_URL) mesos.deb
-    MESOS_TAG="$MESOS_VER"-"$BUILD_DATE$i"_amd64
-    break;
-  fi
-done
+BUILD_PACKAGE=`cat index.html|grep mesos_${MESOS_VERSION}| awk '{print $5}' | cut -c7- | cut -f1 -d '"'`
+rm -rf index.html
+wget $BUILD_URL/last/$BUILD_PACKAGE -O $TOP_DIR/files/mesos.deb
 
 if [ ! -f mesos.deb ] ; then
   echo "Failed to download Mesos daily build."
@@ -24,12 +36,12 @@ if [ ! -f mesos.deb ] ; then
 fi
 
 
-echo "FROM $HUB_USER/mesos" > Dockerfile.slave
-cat Dockerfile.slave.template >> Dockerfile.slave
+#cat Dockerfile.template > Dockerfile 
+#cat Dockerfile.master >> Dockerfile
+
+#sudo docker build -t $HUB_USER/mesos-master --no-cache .
 
-echo "FROM $HUB_USER/mesos" > Dockerfile.master
-cat Dockerfile.master.template >> Dockerfile.master
+cat Dockerfile.template > Dockerfile 
+cat Dockerfile.slave >> Dockerfile
 
-sudo docker build -t $HUB_USER/mesos --no-cache .
-sudo docker build -t $HUB_USER/mesos-slave -f Dockerfile.slave --no-cache .
-sudo docker build -t $HUB_USER/mesos-master -f Dockerfile.master --no-cache .
+sudo docker build -t mesostest/mesos-slave:$MESOS_VER --no-cache .
