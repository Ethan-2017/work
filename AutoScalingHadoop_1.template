{
  "AWSTemplateFormatVersion" : "2010-09-09",
 
  "Description" : "AWS CloudFormation Sample Template",
 
  "Parameters" : {
 
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "Default": "hadoop_key"
    },
 
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
  },
 
  "Mappings": {
        "InstanceTypeToImage": {
            "m1.small": {
                "Image": "centos63-x86_64-cfntools"
            }
        }
    },
 
  "Resources" : {
    "CfnUser" : {
      "Type" : "AWS::IAM::User"
    },
    "WebServerKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : {"Ref": "CfnUser"}
      }
    },
    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : ["nova"],
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "3"
      }
    },
 
    "WebServerScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      }
    },
 
    "WebServerScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      }
    },
 
    "MEMAlarmHigh": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-up if MEM > 50% for 1 minute",
        "MetricName": "MemoryUtilization",
        "Namespace": "system/linux",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "2",
        "AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },
    "MEMAlarmLow": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-down if MEM < 15% for 1 minute",
        "MetricName": "MemoryUtilization",
        "Namespace": "system/linux",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "15",
        "AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    },
 
    "BVTSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
          "GroupDescription": "Standard firewall rules",
          "SecurityGroupIngress": [
                 {
                     "IpProtocol": "tcp",
                     "FromPort": "22",
                     "ToPort": "22",
                     "CidrIp": "0.0.0.0/0"
                 },
                 {
                     "IpProtocol": "tcp",
                     "FromPort": "80",
                     "ToPort": "80",
                     "CidrIp": "0.0.0.0/0"
                 },
                 {
                     "IpProtocol": "tcp",
                     "FromPort": "8775",
                     "ToPort": "8775",
                     "CidrIp": "0.0.0.0/0"
                 }
             ]
      }
    },
 
    "Master": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
          "ImageId": {
              "Fn::FindInMap": [ "InstanceTypeToImage", {"Ref": "InstanceType"}, "Image" ]
          },
          "InstanceType": {"Ref": "InstanceType"},
          "SecurityGroups": [
              {
                 "Ref": "BVTSecurityGroup"
              }
          ],
          "KeyName": {"Ref": "KeyName"},
          "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                      "",
                      [
                          "#!/bin/bash -x\n",
                          "export TERM=xterm\n",
                          "service iptables stop\n",
                          "sudo mkdir -p /hadoop_package\n",
                          "sudo mount 192.168.32.1:/opt/drs/hadoop_package /hadoop_package\n",
                          "cp /hadoop_package/hadoop_key.priv  /root/.ssh/id_rsa\n",
                          "sh /hadoop_package/script.master.sh "
                      ]
                  ]
              }
          }
      }
    },
 
    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "/etc/cfn/cfn-credentials" : {
                "content" : { "Fn::Join" : ["", [
                  "AWSAccessKeyId=", { "Ref" : "WebServerKeys" }, "\n",
                  "AWSSecretKey=", {"Fn::GetAtt": ["WebServerKeys",
                                    "SecretAccessKey"]}, "\n"
                ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },
              "/tmp/stats-crontab.txt" : {
                "content" : { "Fn::Join" : ["", [
                "MAIL=\"\"\n",
                "\n",
                "* * * * * /opt/aws/bin/cfn-push-stats --watch ",
                { "Ref" : "MEMAlarmHigh" }, " --mem-util\n",
                "* * * * * /opt/aws/bin/cfn-push-stats --watch ",
                { "Ref" : "MEMAlarmLow" }, " --mem-util\n"
                ]]},
                "mode"    : "000600",
                "owner"   : "root",
                "group"   : "root"
              }
            }
          }
        }
      },
 
      "Properties": {
        "ImageId": {
                    "Fn::FindInMap": [ "InstanceTypeToImage", {"Ref": "InstanceType"}, "Image" ]
                },
        "InstanceType": {"Ref": "InstanceType"},
        "SecurityGroups": [ { "Ref": "BVTSecurityGroup" } ],
        "KeyName": {"Ref": "KeyName"},
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" },
          " -r LaunchConfig ",
          " --region ", { "Ref" : "AWS::Region" }, "\n",
          "# install crontab\n",
          "crontab /tmp/stats-crontab.txt\n",
          "export TERM=xterm\n",
          "service iptables stop\n",
          "sudo mkdir -p /hadoop_package\n",
          "sudo mount 192.168.32.1:/opt/drs/hadoop_package /hadoop_package\n",
          "cp /hadoop_package/hadoop_key.priv  /root/.ssh/id_rsa\n",
          "yes | /hadoop_package/jdk-6u30-linux-x64-rpm.bin\n",
          " echo \"OK>>>>>>>>>\" >> /tmp/autoscale.txt"
        ]]}}
      },
 
      "DependsOn": "Master"
    }
  }
}
